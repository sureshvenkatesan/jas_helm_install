global:
  imagePullSecrets:
     - myRegistryKeySecretName              ## credential for your local registry
  imageRegistry: releases-docker.jfrog.io   ## local private registry
#  jfrogUrl: '{{ include "jfrog-platform.jfrogUrl" . }}'
#  jfrogUrl: 'https://myjfrog.io'   ## Put in your LB url
 
  ## Artifactory UI URL - Mandatory
  ## Update jfrogUrlUI before running builds on Pipelines
  ## This must be the external URL of Artifactory that any service (such as scm provider) and buildnodes
  ## that you're using can access, for example: https://artifactory.example.com
  ## This can also be set through the UI Administration -> Settings -> custom base url
#  jfrogUrlUI: "https://myjfrog.io"
  

  joinKeySecretName: joinkey-secret
  masterKeySecretName: masterkey-secret

## Disable containerSecurityContext for openshift https://github.com/jfrog/charts/blob/master/stable/distribution/values.yaml#L139
containerSecurityContext:
  enabled: false

## Disable podSecurityContext for openshift https://github.com/jfrog/charts/blob/master/stable/distribution/values.yaml#L147
podSecurityContext:
  enabled: false
#  runAsNonRoot: true
#  runAsUser: 1001360000
#  runAsGroup: 1001360000
#  fsGroup: 1001360000

postgresql:
  enabled: true
  ## Disable SecurityContext and containerSecurityContext for openshift https://github.com/jfrog/charts/blob/master/stable/distribution/values.yaml#L184
#  By disabling both security contexts, the chart does not enforce any specific user or group settings, capabilities, or filesystem permissions, allowing the underlying platform (such as OpenShift) to manage these aspects based on its own security policies.
  securityContext:
    enabled: false
  containerSecurityContext:
    enabled: false

redis:
  ## Disable containerSecurityContext for openshift https://github.com/jfrog/charts/blob/master/stable/distribution/values.yaml#L240
  #  We do not need to change any SecurityContext for pod as we use redis only as a container .
  containerSecurityContext:
    enabled: true