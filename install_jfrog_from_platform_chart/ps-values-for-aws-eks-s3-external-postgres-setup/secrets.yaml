apiVersion: v1
kind: Secret
metadata:
  name: ${RT_MASTERKEY_SECRET_NAME} # rt-masterkey-secret
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  master-key: "${RT_MASTER_KEY}"
---
# Same Join key is used by Artifactory, Xay and Catalog pods:
apiVersion: v1
kind: Secret
metadata:
  name: ${RT_JOINKEY_SECRET_NAME} # joinkey-secret
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  join-key: "${JOIN_KEY}"
---
# Paste the license key witht he proper indendation as shown below, with each license seperated by a blank line
apiVersion: v1
kind: Secret
metadata:
  name: "${RT_LICENSE_SECRET_NAME}" # artifactory-license-secret
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  artifactory.lic: |
    bGljZW5zZTogY0hKdlpIVmpkSE02Q2lBZ1lYSjBhV1poWTNSdmNuazZDaUFnSUNCd2NtOWtkV04w
    T2lCYVdHaDNZVmhLYkdONmIyZE5ha0Y2VFVNd2QwMTVNSGxOUmxGM1RVUnZkMDFFYjNkTlJtOUxZ
    T3N3ZEdVZnBrZkxRNW5ZRjhJUGVkNGdKUG5vQ1VDbytBb05ocGRBa2YrUmJZQUtLSUpyY29FeVZC
    eXFDdnhMdz09Cg==

    bGljZW5zZTogY0hKdlpIVmpkSE02Q2lBZ1lYSjBhV1poWTNSdmNuazZDaUFnSUNCd2NtOWtkV04w
    T2lCYVdHaDNZVmhLYkdONmIyZE5ha0Y1VG1rd2QwMVRNSGhPYkZGM1RVUnZkMDFFYjNkTlJtOUxZ
    WXhKNzRHTUc3a3dhZ3FOVVZYYjBEY3J5Y3ZFZXBqaXlYbnVaNm4zekNiRkVTYnhsOVNsQnBwbWRo
    dXpidEhoL1ZqNXBHYzlTWkF0Q1Q1OWR6VkE9PQo=
---
# https://jfrog.com/help/r/jfrog-installation-setup-documentation/configure-artifactory-to-use-s3-storage
# https://jfrog.com/help/r/jfrog-installation-setup-documentation/s3-direct-upload-template-recommended
kind: Secret
apiVersion: v1
metadata:
  name: "${BINARYSTOREXML_SECRET_NAME}" # artifactory-binarystore-xml
  namespace: ${JFROG_PLATFORM_NAMESPACE}
stringData:
  binarystore.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <config version="2">
      <chain template="s3-storage-v3-direct" />
        <provider id="s3-storage-v3" type="s3-storage-v3">
          <testConnection>true</testConnection>
          <endpoint>"${AWS_ENDPOINT_URL}"</endpoint>
          <bucketName>"${AWS_S3_BUCKET_NAME}"</bucketName>
          <path>artifactory/filestore</path>
          <region>"${AWS_DEFAULT_REGION}"</region>
          <useInstanceCredentials>true</useInstanceCredentials>
          <usePresigning>false</usePresigning>
          <maxConnections>200</maxConnections>
          <connectionTimeout>120000</connectionTimeout>
          <socketTimeout>240000</socketTimeout>
          <useHttp>false</useHttp>
        </provider>
    </config>
---
apiVersion: v1
kind: Secret
metadata:
  name: ${XRAY_MASTERKEY_SECRET_NAME} # xray-masterkey-secret
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  master-key: "${XRAY_MASTER_KEY}"
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CATALOG_MASTERKEY_SECRET_NAME} # catalog-masterkey-secret
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  master-key: "${CATALOG_MASTER_KEY}"
---
apiVersion: v1
kind: Secret
metadata:
  name: ${RT_DB_SECRET_NAME} # artifactory-database-creds
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  db-url: "jdbc:postgresql://${DB_SERVER}:5432/${ARTIFACTORY_DB}"
  db-user: "${RT_DATABASE_USER}"
  db-password: "${RT_DATABASE_PASSWORD}"
---
apiVersion: v1
kind: Secret
metadata:
  name: ${RT_ADMIN_SECRET_NAME} #  art-creds
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  bootstrap.creds: "${ADMIN_USERNAME}@*=${ADMIN_PASSWORD}"
---
apiVersion: v1
kind: Secret
metadata:
  name: ${XRAY_DB_SECRET_NAME}  # xray-database-creds
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  db-url: "postgres://${DB_SERVER}:5432/${XRAY_DB}?sslmode=disable"  # Match the kubectl format
  db-user: "${XRAY_DATABASE_USER}"
  db-password: "${XRAY_DATABASE_PASSWORD}" 
---
apiVersion: v1
kind: Secret
metadata:
  name: ${XRAY_RM_SECRET_NAME} # rabbitmq-admin-creds
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  rabbitmq-password: "${MY_RABBITMQ_ADMIN_USER_PASSWORD}"
---
apiVersion: v1
kind: Secret
metadata:
  name: ${CATALOG_DB_SECRET_NAME}  # catalog-database-creds
  namespace: ${JFROG_PLATFORM_NAMESPACE}
type: Opaque
stringData:
  db-url: "postgres://${DB_SERVER}:5432/${CATALOG_DB}?sslmode=disable"  # Match the kubectl format
  db-user: "${CATALOG_DATABASE_USER}"
  db-password: "${CATALOG_DATABASE_PASSWORD}" 
---